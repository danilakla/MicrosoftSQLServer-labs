--Индекс – это объект базы данных, позволяющий ускорить поиск в определенной таблице, так как при этом данные организуются в виде 
--сбалансированного бинарного дерева поиска.

--Индексы бывают кластеризованные, некластеризованные, уникальные, неуникальные и др.

--Кластеризованные индексы копируют данные таблицы. Также они сортируют и хранят строки данных в таблицах или представлениях на 
--основе их ключевых значений. Этими значениями являются столбцы, включенные в определение индекса

-- НеКластеризованные индексы - каждая запись значения ключа содержит указатель на строку данных, содержащую значение ключа.

-- T1 Создать кластеризованный ин-декс, уменьшающий стоимость SE-LECT-запроса.

USE UNIVER 
-- С помощью системной процедуры SP_HELPINDEX можно получить перечень индексов, связанных с заданной таблицей
exec SP_HELPINDEX'AUDITORIUM_TYPE'
CREATE table #TEST
(
	TIND int,
	TFIELD varchar(100)
);
SET nocount on; -- не выводить сообщение о вводе строк
DECLARE @i int = 0;
WHILE @i < 1000
	begin
		INSERT #TEST(TIND, TFIELD)
			values(floor(20000*RAND()),REPLICATE('data',3));
	IF(@i % 100 = 0) PRINT @i;
	SET @i = @i + 1;
	end;

SELECT * FROM #TEST where TIND between 1500 and 2500 order by TIND 

--Общая стоимость запроса (Estimated Subtree Cost) появляется во всплывающем окне, если подвести курсор к компоненту Table Scan 
--(она равна 0,011). Чтобы объ-ективно оценить время выполнения следующего запроса, надо очистить буферный кэш

checkpoint;  --фиксация БД
DBCC DROPCLEANBUFFERS;  --очистить буферный кэш

CREATE clustered index #TEST_CL on #TEST(TIND asc)  --создаём кластеризованный индекс

SELECT * FROM #TEST where TIND between 1500 and 2500 order by TIND 


DROP index #TEST_CL ON #TEST
DROP TABLE #TEST